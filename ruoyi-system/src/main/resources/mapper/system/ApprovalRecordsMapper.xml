<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.ApprovalRecordsMapper">
    
    <resultMap type="ApprovalRecords" id="ApprovalRecordsResult">
        <result property="approvalId"    column="approval_id"    />
        <result property="orderId"    column="order_id"    />
        <result property="approverId"    column="approver_id"    />
        <result property="status"    column="status"    />
        <result property="comments"    column="comments"    />
        <result property="createdAt"    column="created_at"    />
        <result property="updatedAt"    column="updated_at"    />
    </resultMap>

    <sql id="selectApprovalRecordsVo">
        select approval_id, order_id, approver_id, status, comments, created_at, updated_at from work_order_approvals
    </sql>

    <select id="selectApprovalRecordsList" parameterType="ApprovalRecords" resultMap="ApprovalRecordsResult">
        <include refid="selectApprovalRecordsVo"/>
        <where>  
            <if test="orderId != null "> and order_id = #{orderId}</if>
            <if test="approverId != null "> and approver_id = #{approverId}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
            <if test="comments != null  and comments != ''"> and comments = #{comments}</if>
            <if test="createdAt != null "> and created_at = #{createdAt}</if>
            <if test="updatedAt != null "> and updated_at = #{updatedAt}</if>
        </where>
    </select>
    
    <select id="selectApprovalRecordsByApprovalId" parameterType="Long" resultMap="ApprovalRecordsResult">
        <include refid="selectApprovalRecordsVo"/>
        where approval_id = #{approvalId}
    </select>
        
    <insert id="insertApprovalRecords" parameterType="ApprovalRecords" useGeneratedKeys="true" keyProperty="approvalId">
        insert into work_order_approvals
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="orderId != null">order_id,</if>
            <if test="approverId != null">approver_id,</if>
            <if test="status != null and status != ''">status,</if>
            <if test="comments != null">comments,</if>
            <if test="createdAt != null">created_at,</if>
            <if test="updatedAt != null">updated_at,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="orderId != null">#{orderId},</if>
            <if test="approverId != null">#{approverId},</if>
            <if test="status != null and status != ''">#{status},</if>
            <if test="comments != null">#{comments},</if>
            <if test="createdAt != null">#{createdAt},</if>
            <if test="updatedAt != null">#{updatedAt},</if>
         </trim>
    </insert>

    <update id="updateApprovalRecords" parameterType="ApprovalRecords">
        update work_order_approvals
        <trim prefix="SET" suffixOverrides=",">
            <if test="orderId != null">order_id = #{orderId},</if>
            <if test="approverId != null">approver_id = #{approverId},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="comments != null">comments = #{comments},</if>
            <if test="createdAt != null">created_at = #{createdAt},</if>
            <if test="updatedAt != null">updated_at = #{updatedAt},</if>
        </trim>
        where approval_id = #{approvalId}
    </update>

    <delete id="deleteApprovalRecordsByApprovalId" parameterType="Long">
        delete from work_order_approvals where approval_id = #{approvalId}
    </delete>

    <delete id="deleteApprovalRecordsByApprovalIds" parameterType="String">
        delete from work_order_approvals where approval_id in 
        <foreach item="approvalId" collection="array" open="(" separator="," close=")">
            #{approvalId}
        </foreach>
    </delete>
</mapper>